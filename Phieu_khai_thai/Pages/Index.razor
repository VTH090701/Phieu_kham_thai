@page "/"

@using Data
@using Services
@inject IApiService ApiService
@inject NavigationManager navigationmanager
@inject NotificationService notification
@layout Login


<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenTemplateForm Data=@("LoginWithDefaultValues")>
        <RadzenLogin AllowRegister="false" AllowResetPassword="false" Username=@userName Password=@password
                     AllowRememberMe="false" RememberMe="@rememberMe"
                     Login=@(args => OnLogin(args, "Login with default values"))
                     ResetPassword=@(args => OnResetPassword(args, "Login with default values"))
                     Register=@(args => OnRegister("Login with default values")) />
    </RadzenTemplateForm>
</RadzenCard>

@* <EventConsole @ref=@console />
 *@




@code {

    private string userName = "";
    private string password = "";
    bool rememberMe = false;

    // EventConsole console;

    private ResponseApi<ResponLogin<Function>> response;

    async Task OnLogin(LoginArgs args, string name)
    {

        // console.Log($"{name} -> Username: {args.Username}, password: {args.Password}, remember me: {args.RememberMe}");
        if (!string.IsNullOrEmpty(args.Username) && !string.IsNullOrEmpty(args.Password))
        {

            response = await ApiService.Login(userName = args.Username, args.Password);
            if (response.Code == "200")
            {
                notification.Notify(NotificationSeverity.Success, "Đăng nhập thành công");
                navigationmanager.NavigateTo("/dashboard");
            }

        }

    }

    void OnRegister(string name)
    {
        // console.Log($"{name} -> Register");
    }

    void OnResetPassword(string value, string name)
    {
        // console.Log($"{name} -> ResetPassword for user: {value}");
    }
}

